# Generated by Django 5.2.2 on 2025-07-31 01:02

import django.db.models.deletion
import echo.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='APIRequestLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('method', models.CharField(max_length=10)),
                ('path', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomToken',
            fields=[
                ('key', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auth_tokens', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Beatmap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beatmap_id', models.CharField(db_index=True, max_length=255, unique=True)),
                ('beatmapset_id', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(blank=True, max_length=1000)),
                ('version', models.CharField(blank=True, max_length=1000)),
                ('artist', models.CharField(blank=True, max_length=1000)),
                ('creator', models.CharField(blank=True, max_length=255)),
                ('cover_image_url', models.URLField(blank=True, max_length=1000, null=True)),
                ('total_length', models.IntegerField(blank=True, null=True)),
                ('bpm', models.FloatField(blank=True, null=True)),
                ('cs', models.FloatField(blank=True, null=True)),
                ('drain', models.FloatField(blank=True, null=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('ar', models.FloatField(blank=True, null=True)),
                ('difficulty_rating', models.FloatField(blank=True, null=True)),
                ('mode', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(blank=True, max_length=32)),
                ('playcount', models.IntegerField(blank=True, null=True)),
                ('favourite_count', models.IntegerField(blank=True, null=True)),
                ('genres', models.ManyToManyField(blank=True, to='echo.genre')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('upvotes', models.PositiveIntegerField(default=0)),
                ('downvotes', models.PositiveIntegerField(default=0)),
                ('is_locked', models.BooleanField(default=False)),
                ('is_recommended', models.BooleanField(default=False)),
                ('description_author', models.ForeignKey(blank=True, default=echo.models.get_default_author, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag_descriptions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TagApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_prediction', models.BooleanField(default=False, help_text='Indicates if tag is predicted for this beatmap')),
                ('prediction_confidence', models.FloatField(blank=True, default=0.0, help_text='Confidence level of the prediction', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('beatmap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='echo.beatmap')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='echo.tag')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('tag', 'beatmap', 'user')},
            },
        ),
        migrations.AddField(
            model_name='tag',
            name='beatmaps',
            field=models.ManyToManyField(blank=True, related_name='tags', through='echo.TagApplication', to='echo.beatmap'),
        ),
        migrations.CreateModel(
            name='TagDescriptionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('date_written', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='description_histories', to='echo.tag')),
            ],
            options={
                'ordering': ['-date_written'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('osu_id', models.CharField(max_length=100, unique=True)),
                ('profile_pic_url', models.URLField(blank=True, max_length=1000, null=True)),
                ('banned', models.BooleanField(default=False)),
                ('ban_reason', models.CharField(blank=True, max_length=255)),
                ('user', models.OneToOneField(default=echo.models.get_default_user, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_type', models.CharField(choices=[('upvote', 'Upvote'), ('downvote', 'Downvote')], max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='echo.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'tag'], name='echo_vote_user_id_00fe80_idx')],
                'unique_together': {('user', 'tag')},
            },
        ),
    ]
